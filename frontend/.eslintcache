[{"C:\\Users\\hieun\\stock-app\\frontend\\src\\index.js":"1","C:\\Users\\hieun\\stock-app\\frontend\\src\\App.js":"2","C:\\Users\\hieun\\stock-app\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\hieun\\stock-app\\frontend\\src\\Components\\Layout.jsx":"4","C:\\Users\\hieun\\stock-app\\frontend\\src\\Components\\StockDisplay.jsx":"5","C:\\Users\\hieun\\stock-app\\frontend\\src\\Components\\Progress.jsx":"6","C:\\Users\\hieun\\stock-app\\frontend\\src\\Components\\BuyInputForm.jsx":"7","C:\\Users\\hieun\\stock-app\\frontend\\src\\Components\\SellInputForm.jsx":"8","C:\\Users\\hieun\\stock-app\\frontend\\src\\Components\\Investing.jsx":"9"},{"size":690,"mtime":1611084569871,"results":"10","hashOfConfig":"11"},{"size":211,"mtime":1611078244776,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":2364,"mtime":1611073535097,"results":"14","hashOfConfig":"11"},{"size":6559,"mtime":1611085310427,"results":"15","hashOfConfig":"11"},{"size":3358,"mtime":1611084726272,"results":"16","hashOfConfig":"11"},{"size":2538,"mtime":1610469413135,"results":"17","hashOfConfig":"11"},{"size":2545,"mtime":1611046865869,"results":"18","hashOfConfig":"11"},{"size":507,"mtime":1611074067595,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1izxl6t",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"23"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"23"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\hieun\\stock-app\\frontend\\src\\index.js",["47"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux';\nimport axios from 'axios';\nconst store = createStore(() => ({\n}));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["48","49"],"C:\\Users\\hieun\\stock-app\\frontend\\src\\App.js",["50"],"import logo from './logo.svg';\nimport './App.css';\nimport Layout from './Components/Layout';\n;\nconst App = () => {\n  return (\n    <div>\n        <Layout>\n\n        </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\hieun\\stock-app\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\hieun\\stock-app\\frontend\\src\\Components\\Layout.jsx",["51"],"import { useState } from 'react';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport StockDisplay from './StockDisplay';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Progress from './Progress';\r\nimport BuyInputForm from './BuyInputForm';\r\nimport SellInputForm from './SellInputForm';\r\n\r\nimport { Typography } from '@material-ui/core';\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    tableRightBorder: {\r\n        borderWidth: 1,\r\n        borderColor: 'black',\r\n        borderStyle: 'solid'\r\n    },\r\n    stockDisplay: {\r\n        width: 600,\r\n        marginRight: 30,\r\n    },\r\n    lineDisplay: {\r\n        marginBottom: 100,\r\n    },\r\n    inputAndTable: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        marginTop: 50,\r\n        justify: \"flex-end\",\r\n        flexDirection: \"row\"\r\n    }\r\n});\r\n\r\nconst Layout = () => {\r\n    const classes = useStyles();\r\n    const [newStock, setNewStock] = useState({});\r\n    const [deleteStock, setDeleteStock] = useState({});\r\n    const addData = (data) => {\r\n        setNewStock(data);\r\n    }\r\n    const sellStock = (data) => {\r\n        setDeleteStock(data);\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container>\r\n                <Grid xs={12}>\r\n                    <Progress>\r\n                    </Progress>\r\n                </Grid>\r\n                <Grid className={classes.inputAndTable}>\r\n                    <Grid className={classes.stockDisplay} >\r\n                        <StockDisplay newStock={newStock} deleteStock={deleteStock}>\r\n                        </StockDisplay>\r\n                    </Grid>\r\n                    <Grid>\r\n                        <Typography variant=\"h4\" align=\"left\" color=\"primary\">\r\n                            Buy Stock\r\n                        </Typography>\r\n                        <BuyInputForm onSubmit={addData}>\r\n                        </BuyInputForm>\r\n                        <Typography variant=\"h4\" align=\"left\" color=\"primary\">\r\n                            Sell Stock\r\n                        </Typography>\r\n                        <SellInputForm onSubmit={sellStock}>\r\n\r\n                        </SellInputForm>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment >\r\n    );\r\n}\r\nexport default Layout;","C:\\Users\\hieun\\stock-app\\frontend\\src\\Components\\StockDisplay.jsx",["52"],"import React, { useState, useEffect } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\n\r\n// const _ = require('lodash')\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.primary.light,\r\n        color: theme.palette.common.black,\r\n        borderWidth: 1,\r\n        borderColor: 'black',\r\n        borderStyle: 'solid',\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\n\r\n\r\nfunction createTransaction(shares, price, total, current) {\r\n    return { shares, price, total, current };\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 500,\r\n        marginLeft: 30,\r\n    },\r\n    tableRightBorder: {\r\n        borderWidth: 1,\r\n        borderColor: 'black',\r\n        borderStyle: 'solid',\r\n    },\r\n});\r\n\r\n\r\nconst StockDisplay = (props) => {\r\n    const classes = useStyles();\r\n    const [rows, setRows] = useState([]);\r\n    const [stockDict, setStockDict] = useState({});\r\n    const [currentPrice, setCurrentPrice] = useState({});\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8080/allStockPrice')\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                let stockMap = {}\r\n                for (var i = 0; i < res.data.length; i++) {\r\n                    const stock = res.data;\r\n                    const names = stock[i][\"stock\"]\r\n                    stockMap = { ...stockMap, [names]: stock[i][\"fields\"][\"price\"] }\r\n                }\r\n                setCurrentPrice(stockMap);\r\n                // setCurrentPrice((currentPrice) => {\r\n                //     return {...currentPrice, res.data}\r\n                // })\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8080/allTransactions')\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                const stockList = res.data.map(row => row[\"Stock Name\"]);\r\n                let stockMap = {}\r\n                for (var i = 0; i < res.data.length; i++) {\r\n                    const stock = res.data;\r\n                    const names = stock[i][\"Stock Name\"]\r\n                    stockMap = { ...stockMap, [names]: createTransaction(stock[i][\"Shares\"], stock[i][\"Price\"], stock[i][\"Total\"], 0) }\r\n                }\r\n                setStockDict(stockMap);\r\n                setRows(stockList);\r\n            })\r\n    }, [props.newStock])\r\n\r\n    useEffect(() => {\r\n        let stockList = rows;\r\n        stockList = rows.filter((item) => {\r\n            return item !== props.deleteStock[\"Stock Name\"]\r\n        })\r\n        setRows(stockList)\r\n    }, [props.deleteStock])\r\n\r\n    useEffect(() => {\r\n        const socket = io.connect(\"http://localhost:8080\");\r\n        socket.on(\"change-type\", async (data) => {\r\n            const [key, value] = Object.entries(data)[0]\r\n            setCurrentPrice((currentPrice) => {\r\n                return { ...currentPrice, [key]: value }\r\n            })\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <TableContainer border={1} component={Paper}>\r\n            <Table aria-label=\"customized table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <StyledTableCell className={classes.tableRightBorder} align=\"center\">Stock Name</StyledTableCell>\r\n                        <StyledTableCell className={classes.tableRightBorder} align=\"center\">Shares</StyledTableCell>\r\n                        <StyledTableCell className={classes.tableRightBorder} align=\"center\">Equity</StyledTableCell>\r\n                        <StyledTableCell className={classes.tableRightBorder} align=\"center\">Total Return</StyledTableCell>\r\n                        <StyledTableCell className={classes.tableRightBorder} align=\"center\">Current Price</StyledTableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.reduce((result, row) => {\r\n                        let currentRowPrice = (currentPrice[row])\r\n                        let shares = '0';\r\n                        let equity = '0';\r\n                        let totalReturn = '0'\r\n                        if (stockDict !== undefined) {\r\n                            shares = (parseFloat(stockDict[row][\"shares\"]).toLocaleString('en-US', { maximumFractionDigits: 7 }));\r\n                            // shares = stockDict[row][\"shares\"].toString()\r\n                            if(shares !== undefined && currentRowPrice !== undefined) {\r\n                                console.log(currentRowPrice)\r\n                                equity = `$ ${(parseFloat(shares.replace(',', '')).toFixed(6) * parseFloat(currentRowPrice.replace(',', ''))).toLocaleString()}`;\r\n                            }\r\n                            totalReturn = parseFloat(parseFloat(equity.replace('$', '').replace(',', '')) - parseFloat(stockDict[row][\"total\"])).toFixed(3)\r\n                        }\r\n\r\n                        result.push(<StyledTableRow>\r\n                            <StyledTableCell className={classes.tableRightBorder} component=\"th\" scope=\"row\" align=\"center\">\r\n                                {row}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell className={classes.tableRightBorder} align=\"center\">{shares}</StyledTableCell>\r\n                            <StyledTableCell className={classes.tableRightBorder} align=\"center\">{equity}</StyledTableCell>\r\n                            <StyledTableCell className={classes.tableRightBorder} align=\"center\">{totalReturn}</StyledTableCell>\r\n                            <StyledTableCell className={classes.tableRightBorder} align=\"center\">{currentRowPrice}</StyledTableCell>\r\n                        </StyledTableRow>)\r\n                        return result\r\n                    }, [])}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\nexport default StockDisplay;","C:\\Users\\hieun\\stock-app\\frontend\\src\\Components\\Progress.jsx",["53","54"],"import { Chart } from 'chart.js';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Investing from './Investing';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    investing: {\r\n        marginLeft: theme.spacing(10)\r\n    }\r\n}));\r\nconst Progress = () => {\r\n    const [stockPrice, setStockPrice] = useState([]);\r\n    const [stockInterval, setStockInterval] = useState([]);\r\n    const classes = useStyles()\r\n    useEffect(() => {\r\n        fetchStock()\r\n    }, []);\r\n\r\n\r\n    const fetchStock = () => {\r\n        const API_KEY = 'DG4BRBSVFRTU4V67';\r\n        let StockSymbol = 'BTC';\r\n        let API_Call = `https://www.alphavantage.co/query?function=DIGITAL_CURRENCY_DAILY&symbol=BTC&market=USD&apikey=${API_KEY}`\r\n        let stockPricee = [];\r\n        let stockIntervall = [];\r\n\r\n        fetch(API_Call)\r\n            .then(\r\n                function (response) {\r\n                    return response.json();\r\n                }\r\n            )\r\n            .then(\r\n                function (data) {\r\n                    console.log(data);\r\n\r\n                    for (var key in data['Time Series (Digital Currency Daily)']) {\r\n                        stockIntervall.push(key);\r\n                        stockPricee.push(data['Time Series (Digital Currency Daily)'][key]['1a. open (USD)']);\r\n                    }\r\n                    setStockPrice(stockPricee.reverse())\r\n                    setStockInterval(stockIntervall.reverse())\r\n                }\r\n            )\r\n    }\r\n\r\n    useEffect(() => {\r\n        const ctx = document.getElementById(\"stockChart\");\r\n        new Chart(ctx, {\r\n            type: \"line\",\r\n            data: {\r\n                labels: stockInterval,\r\n                datasets: [\r\n                    {\r\n                        fill: false,\r\n                        label: \"BTC\",\r\n                        lineTension: 0.2,\r\n                        backgroundColor: 'rgba(75,192,192,0.4)',\r\n                        borderColor: 'rgba(75,192,192,1)',\r\n                        borderCapStyle: 'butt',\r\n                        borderDash: [],\r\n                        borderDashOffset: 0.0,\r\n                        borderJoinStyle: 'miter',\r\n                        pointBorderColor: 'rgba(75,192,192,1)',\r\n                        pointBackgroundColor: '#fff',\r\n                        pointBorderWidth: 1,\r\n                        pointHoverRadius: 5,\r\n                        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                        pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                        pointHoverBorderWidth: 2,\r\n                        pointRadius: 1,\r\n                        pointHitRadius: 10,\r\n                        data: stockPrice,\r\n                    }\r\n                ]\r\n            }\r\n        });\r\n    });\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div>\r\n                <h1 align=\"center\">Stock Market</h1>\r\n                <div className={classes.investing}>\r\n                    <Investing>\r\n                    </Investing>\r\n                </div>\r\n\r\n                <div className=\"Progress\">\r\n                    <canvas id=\"stockChart\" width={document.body.clientWidth} height=\"450\" />\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default Progress;","C:\\Users\\hieun\\stock-app\\frontend\\src\\Components\\BuyInputForm.jsx",["55"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport axios from 'axios';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nconst BuyInputForm = (props) => {\r\n    const classes = useStyles();\r\n    const [stockName, setStockName] = useState('');\r\n    const [shares, setShares] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const handleStockNameChange = e => setStockName(e.target.value);\r\n    const handleSharesChange = e => setShares(e.target.value);\r\n    const handlePriceChange = e => setPrice(e.target.value);\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n        const data = {\r\n            \"Stock Name\": stockName,\r\n            \"Shares\": shares,\r\n            \"Price\": price,\r\n            \"Total\": shares * price\r\n        };\r\n        axios.post('http://localhost:8080/addTransaction', data)\r\n            .then((res) => {\r\n                setStockName('');\r\n                setPrice('');\r\n                setShares('');\r\n                props.onSubmit(data)\r\n            });\r\n    }\r\n    return (\r\n        <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n            <FormControl>\r\n                <InputLabel> Stock Name</InputLabel>\r\n                <Input id=\"outlined-basic\" onChange={handleStockNameChange} value={stockName} />\r\n            </FormControl>\r\n            <FormControl>\r\n                <InputLabel> Shares</InputLabel>\r\n                <Input id=\"outlined-basic\" onChange={handleSharesChange} value={shares} />\r\n            </FormControl>\r\n            <FormControl>\r\n                <InputLabel> Price purchased</InputLabel>\r\n                <Input id=\"outlined-basic\"\r\n                    onChange={handlePriceChange}\r\n                    value={price}\r\n                    startAdornment={<InputAdornment position=\"start\">$</InputAdornment>} />\r\n            </FormControl>\r\n            <Button type='submit' variant=\"contained\" color=\"primary\" onSubmit={handleSubmit}>\r\n                Submit\r\n            </Button>\r\n        </form>\r\n    );\r\n}\r\nexport default BuyInputForm","C:\\Users\\hieun\\stock-app\\frontend\\src\\Components\\SellInputForm.jsx",["56"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport axios from 'axios';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nconst SellInputForm = (props) => {\r\n    const classes = useStyles();\r\n    const [stockName, setStockName] = useState('');\r\n    const [shares, setShares] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const handleStockNameChange = e => setStockName(e.target.value);\r\n    const handleSharesChange = e => setShares(e.target.value);\r\n    const handlePriceChange = e => setPrice(e.target.value);\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n        const data = {\r\n            \"Stock Name\": stockName,\r\n            \"Shares\": shares,\r\n            \"Price\": price,\r\n            \"Total\": shares * price\r\n        };\r\n        axios.post('http://localhost:8080/sellTransaction', data)\r\n            .then((res) => {\r\n                setStockName('');\r\n                setPrice('');\r\n                setShares('');\r\n                props.onSubmit(res.data.data)\r\n            });\r\n    }\r\n    return (\r\n        <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n            <FormControl>\r\n                <InputLabel> Stock Name</InputLabel>\r\n                <Input id=\"outlined-basic\" onChange={handleStockNameChange} value={stockName} />\r\n            </FormControl>\r\n            <FormControl>\r\n                <InputLabel> Shares</InputLabel>\r\n                <Input id=\"outlined-basic\" onChange={handleSharesChange} value={shares} />\r\n            </FormControl>\r\n            <FormControl>\r\n                <InputLabel> Price sold</InputLabel>\r\n                <Input id=\"outlined-basic\"\r\n                    onChange={handlePriceChange}\r\n                    value={price}\r\n                    startAdornment={<InputAdornment position=\"start\">$</InputAdornment>} />\r\n            </FormControl>\r\n            <Button type='submit' variant=\"contained\" color=\"primary\" onSubmit={handleSubmit}>\r\n                Submit\r\n            </Button>\r\n        </form>\r\n    );\r\n}\r\nexport default SellInputForm","C:\\Users\\hieun\\stock-app\\frontend\\src\\Components\\Investing.jsx",[],["57","58"],{"ruleId":"59","severity":1,"message":"60","line":8,"column":8,"nodeType":"61","messageId":"62","endLine":8,"endColumn":13},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"59","severity":1,"message":"67","line":1,"column":8,"nodeType":"61","messageId":"62","endLine":1,"endColumn":12},{"ruleId":"59","severity":1,"message":"68","line":5,"column":10,"nodeType":"61","messageId":"62","endLine":5,"endColumn":20},{"ruleId":"69","severity":1,"message":"70","line":99,"column":8,"nodeType":"71","endLine":99,"endColumn":27,"suggestions":"72"},{"ruleId":"59","severity":1,"message":"68","line":4,"column":10,"nodeType":"61","messageId":"62","endLine":4,"endColumn":20},{"ruleId":"59","severity":1,"message":"73","line":22,"column":13,"nodeType":"61","messageId":"62","endLine":22,"endColumn":24},{"ruleId":"59","severity":1,"message":"74","line":1,"column":27,"nodeType":"61","messageId":"62","endLine":1,"endColumn":36},{"ruleId":"59","severity":1,"message":"74","line":1,"column":27,"nodeType":"61","messageId":"62","endLine":1,"endColumn":36},{"ruleId":"63","replacedBy":"75"},{"ruleId":"65","replacedBy":"76"},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-native-reassign",["77"],"no-negated-in-lhs",["78"],"'logo' is defined but never used.","'withStyles' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'rows'. Either include it or remove the dependency array.","ArrayExpression",["79"],"'StockSymbol' is assigned a value but never used.","'useEffect' is defined but never used.",["77"],["78"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [props.deleteStock, rows]",{"range":"82","text":"83"},[3247,3266],"[props.deleteStock, rows]"]